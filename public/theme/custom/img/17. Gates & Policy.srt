0
1
00:00:04,070 --> 00:00:05,450
Hello and welcome back.
1

2
00:00:07,130 --> 00:00:09,200
We are almost done with our CRUD application.
2

3
00:00:10,430 --> 00:00:15,350
However, if we go to our homepage we still see this default Laravel page.
3

4
00:00:16,910 --> 00:00:20,330
We would like to change it and instead display the login page.
4

5
00:00:21,290 --> 00:00:22,520
Let's see how we can do that.
5

6
00:00:24,500 --> 00:00:28,760
We go to the terminal, we display the Route List
6

7
00:00:30,900 --> 00:00:34,710
And we see, this is a login URI,
7

8
00:00:35,670 --> 00:00:38,010
which is handled by the Auth Login Controller.
8

9
00:00:38,850 --> 00:00:40,380
And within that showLoginForm.
9

10
00:00:41,560 --> 00:00:41,860
OK.
10

11
00:00:42,720 --> 00:00:44,560
So we go to the Routes File.
11

12
00:00:44,930 --> 00:00:47,150
We comment this out as 
12

13
00:00:47,220 --> 00:00:48,450
we no longer need this.
13

14
00:00:49,670 --> 00:00:51,410
WE can also comment this home controller.
14

15
00:00:52,580 --> 00:01:00,580
And now we define a new Route for the homepage, which would be handled by AuthLogin Controller @
15

16
00:01:00,620 --> 00:01:03,320
showLoginForm. Now if we reolad
16

17
00:01:03,350 --> 00:01:03,800
this,
17

18
00:01:07,040 --> 00:01:08,270
and now we can see the,
18

19
00:01:09,550 --> 00:01:12,930
Login page as the homepage.
19

20
00:01:14,290 --> 00:01:14,620
OK.
20

21
00:01:14,950 --> 00:01:22,690
Another thing that we would like to change is, change this Laravel to our project name which is Storify.
21

22
00:01:24,090 --> 00:01:25,660
Well how we can do that?
22

23
00:01:26,920 --> 00:01:28,840
We go to the environment file.
23

24
00:01:29,950 --> 00:01:31,300
And here we the APP_NAME
24

25
00:01:32,360 --> 00:01:34,650
We can change it to Storify.
25

26
00:01:35,800 --> 00:01:39,150
Save it. Before this is reflected,
26

27
00:01:39,430 --> 00:01:48,620
We need to configure the cache. As we have learned before, we can do this using php artisan
27

28
00:01:49,190 --> 00:01:51,040
config:cache
28

29
00:01:53,860 --> 00:01:57,830
Now if we relaod it. It displays
29

30
00:02:00,120 --> 00:02:00,580
Storify.
30

31
00:02:01,600 --> 00:02:01,820
OK.
31

32
00:02:03,390 --> 00:02:10,080
Now, instead of logging the first user, what we are going to do is we are going to login with the second
32

33
00:02:10,080 --> 00:02:15,150
user for which we have some stories added previously.
33

34
00:02:17,460 --> 00:02:19,110
So when I log in with this user.
34

35
00:02:23,080 --> 00:02:32,410
Well we get to the stories page and we see that we are shown the stories for this user.
35

36
00:02:33,820 --> 00:02:35,440
And if you go to the
36

37
00:02:36,280 --> 00:02:36,780
view page,
37

38
00:02:37,330 --> 00:02:38,320
This is working fine.
38

39
00:02:39,370 --> 00:02:44,140
However, if I manually change the ID, let's say to 13.
39

40
00:02:47,480 --> 00:02:51,240
Well, then I can view the story of our another user.
40

41
00:02:52,260 --> 00:02:52,410
Mm hmm.
41

42
00:02:54,410 --> 00:02:57,330
Well, this is not much of a problem.
42

43
00:02:58,470 --> 00:03:00,620
However, if I go to the edit.
43

44
00:03:02,540 --> 00:03:04,970
I can see the Edit Form and if I,
44

45
00:03:06,970 --> 00:03:08,350
Let's see if I can change it.
45

46
00:03:08,710 --> 00:03:15,160
I would change title to hacked, and I will change the body to Your Story
46

47
00:03:17,270 --> 00:03:18,080
Has been
47

48
00:03:20,710 --> 00:03:21,130
Hacked
48

49
00:03:23,270 --> 00:03:24,070
by a malicious
49

50
00:03:24,990 --> 00:03:25,350
user.
50

51
00:03:26,320 --> 00:03:28,240
Let's see what happened when we click on Save.
51

52
00:03:33,270 --> 00:03:33,650
Okay.
52

53
00:03:34,310 --> 00:03:35,420
All right.
53

54
00:03:36,800 --> 00:03:37,740
Let's save it now.
54

55
00:03:39,880 --> 00:03:42,790
And it seems that story has been updated successfully.
55

56
00:03:43,420 --> 00:03:44,500
Well, this isn't good.
56

57
00:03:45,070 --> 00:03:48,650
We need to have some sort of check in our application.
57

58
00:03:50,050 --> 00:03:53,260
What we are looking for is the Authorization process.
58

59
00:03:54,580 --> 00:03:59,200
We need to check if a current logged in user is allowed to perform an action or not.
59

60
00:04:00,400 --> 00:04:04,390
Well, this is different from authentication. As we've just seen,
60

61
00:04:04,620 --> 00:04:10,450
The user might be authenticated, but he's still not allowed to perform a certain action.
61

62
00:04:12,660 --> 00:04:14,610
So how we can implement this Authorization?
62

63
00:04:15,870 --> 00:04:16,260
Well.
63

64
00:04:17,320 --> 00:04:24,510
Laravel provides Gates and policies to determine whether a user is allowed to perform an action or not.
64

65
00:04:25,560 --> 00:04:27,380
We will see how both of them work.
65

66
00:04:28,560 --> 00:04:29,910
Let's begin with the gate.
66

67
00:04:32,730 --> 00:04:46,200
You could define a gate in the App Provider and within that Auth Service Provider. Within this boot function,
67

68
00:04:46,230 --> 00:04:48,000
you can define all the gates.
68

69
00:04:49,170 --> 00:04:51,600
Let's define one. Gate
69

70
00:04:52,530 --> 00:04:56,240
And I would include this at the top.
70

71
00:04:57,460 --> 00:05:00,550
So you need to include this file at the top,
71

72
00:05:01,270 --> 00:05:03,950
If your editor is not doing it automatically.
72

73
00:05:04,990 --> 00:05:06,720
So we are going to define a Gate.
73

74
00:05:07,820 --> 00:05:09,190
We are going to give it a name.
74

75
00:05:09,250 --> 00:05:10,540
Let's call it,
75

76
00:05:11,310 --> 00:05:12,250
edit-story.
76

77
00:05:13,450 --> 00:05:19,930
And this is going to take a closure, which will have two parameters.
77

78
00:05:21,040 --> 00:05:25,480
The first one is going to be the user and the second one is going to be the
78

79
00:05:26,500 --> 00:05:27,960
Story that we need to edit.
79

80
00:05:29,620 --> 00:05:37,360
Remember that the first parameter is always user, whether you pass it or not.
80

81
00:05:39,240 --> 00:05:48,150
OK, so here we need to define, here we need to return true or false, depending upon whether a user
81

82
00:05:48,150 --> 00:05:50,790
can update / edit a story or not.
82

83
00:05:51,780 --> 00:06:03,370
So how we could do that? Well we need to make sure the User ID is equal to story user_id
83

84
00:06:03,780 --> 00:06:11,580
So if the user_id column in the story is equal to the logged in User ID
84

85
00:06:12,270 --> 00:06:17,130
that means user is allowed to perform that action and
85

86
00:06:18,690 --> 00:06:21,420
In that case, we could return true.
86

87
00:06:23,510 --> 00:06:23,830
OK.
87

88
00:06:25,620 --> 00:06:28,360
Let's see how we can use it in the stories.
88

89
00:06:28,580 --> 00:06:28,920
Controller.
89

90
00:06:31,400 --> 00:06:38,210
Now, within this Edit method, I need to check whether a user is authorized to edit a story or not.
90

91
00:06:39,110 --> 00:06:40,730
We could do that using Gate.
91

92
00:06:42,470 --> 00:06:48,580
And don't forget to include this at the top, if your Editor is not already doing it.
92

93
00:06:50,480 --> 00:06:52,890
And we could use authorize
93

94
00:06:54,050 --> 00:06:55,700
And then the name of the ability,
94

95
00:06:56,540 --> 00:06:59,690
That was a edit-story. If you remember over here,
95

96
00:07:00,680 --> 00:07:02,280
this was the name of the ability.
96

97
00:07:03,740 --> 00:07:08,490
And then we ask it, whether it is, whether the user can update this story or Not.
97

98
00:07:08,630 --> 00:07:11,180
If you see here closely,
98

99
00:07:11,210 --> 00:07:12,950
We have not passed it the User.
99

100
00:07:14,690 --> 00:07:17,540
This will be automatically inserted by the Laravel.
100

101
00:07:18,740 --> 00:07:25,430
So even though we have only passed it the story parameter, Laravel internally is going to handle it.
101

102
00:07:25,520 --> 00:07:27,740
So we do not need to pass it.
102

103
00:07:29,240 --> 00:07:32,300
So now if we go to our URL,
103

104
00:07:36,780 --> 00:07:40,290
We see that we are getting a forbidden error.
104

105
00:07:41,220 --> 00:07:42,820
And if we change our GATE again,
105

106
00:07:43,110 --> 00:07:44,070
So let's say we 
106

107
00:07:45,190 --> 00:07:45,850
return a
107

108
00:07:45,860 --> 00:07:46,720
True over here.
108

109
00:07:50,250 --> 00:07:50,670
And.
109

110
00:07:52,480 --> 00:07:53,890
Then we try to reload the page.
110

111
00:07:54,220 --> 00:07:59,140
Now user can again edit the story.
111

112
00:07:59,980 --> 00:08:02,370
So that means our Gate is working fine.
112

113
00:08:03,610 --> 00:08:13,370
We again switch back to our original code and we see how we can define a Gate in the Auth service provider.
113

114
00:08:14,380 --> 00:08:18,070
And then within the controller, how we can check if we,
114

115
00:08:19,080 --> 00:08:23,460
We can check using the same Gate whether the user is allowed to perform an action or not.
115

116
00:08:26,280 --> 00:08:32,840
Now, as you can see, we need to define multiple gates for all the actions.
116

117
00:08:35,290 --> 00:08:40,110
And if he had more than one Eloquent models, we will need to define Gate for all of them.
117

118
00:08:41,380 --> 00:08:43,840
This would clutter our Auth service provider.
118

119
00:08:45,790 --> 00:08:51,580
A better way to define authorization, especially in the case of resource controllers, is to define
119

120
00:08:51,580 --> 00:08:52,150
a Policy.
120

121
00:08:53,520 --> 00:08:55,000
Let's comment our code.
121

122
00:08:59,410 --> 00:09:00,660
And let's see how we can
122

123
00:09:01,810 --> 00:09:02,690
Create a Policy.
123

124
00:09:03,350 --> 00:09:04,520
If you go to our terminal,
124

125
00:09:07,390 --> 00:09:09,880
We see a list of commands.
125

126
00:09:10,150 --> 00:09:10,450
OK.
126

127
00:09:11,260 --> 00:09:12,340
I made a mistake over there.
127

128
00:09:16,200 --> 00:09:19,630
And within this make, we have a
128

129
00:09:21,050 --> 00:09:24,560
Make policy command, which creates a new policy class.
129

130
00:09:25,630 --> 00:09:26,260
Let's see
130

131
00:09:27,520 --> 00:09:28,480
the help this one.
131

132
00:09:29,830 --> 00:09:33,180
php artisan help make:policy
132

133
00:09:39,700 --> 00:09:42,790
So we need to pass it the name of the class.
133

134
00:09:44,750 --> 00:09:46,160
So let's do that.
134

135
00:09:46,250 --> 00:09:55,430
And we are going to also pass the model using -m parameter and we know the name of the model is Story
135

136
00:09:57,200 --> 00:09:58,310
So let's do that.
136

137
00:09:58,610 --> 00:10:00,020
php artisan
137

138
00:10:02,340 --> 00:10:04,290
make:policy
138

139
00:10:05,670 --> 00:10:09,220
And the name of the policy is going to be the story policy.
139

140
00:10:12,060 --> 00:10:14,980
-m and Model Name story.
140

141
00:10:18,120 --> 00:10:20,580
Well, it says the policy has been created successfully.
141

142
00:10:21,450 --> 00:10:29,910
So let's see. we have a new folder policies inside app and within that we have a story policy.
142

143
00:10:31,260 --> 00:10:31,630
OK.
143

144
00:10:33,140 --> 00:10:34,380
Now within this story policy,
144

145
00:10:34,460 --> 00:10:38,070
we have a number of methods and for each method
145

146
00:10:38,100 --> 00:10:43,890
We need to return, true or false, depending upon whether a user can perform an action or not.
146

147
00:10:45,110 --> 00:10:45,900
So let's do that.
147

148
00:10:47,230 --> 00:10:48,360
First one is viewAny.
148

149
00:10:49,000 --> 00:10:52,750
This one is for viewing the list of the stories.
149

150
00:10:53,770 --> 00:10:56,400
So we are going to return true.
150

151
00:10:57,520 --> 00:11:05,110
We do not need to check the user over here because within the controller we are always fetching the stories
151

152
00:11:05,110 --> 00:11:06,390
for the authenticated user.
152

153
00:11:07,860 --> 00:11:08,200
OK.
153

154
00:11:09,910 --> 00:11:13,060
Now, this one is whether a user can view a story or not.
154

155
00:11:14,230 --> 00:11:17,560
Now this is very similar to the Gate that we defined.
155

156
00:11:18,580 --> 00:11:22,910
So we are going to say if a User ID is same as
156

157
00:11:23,050 --> 00:11:24,400
story user_id,
157

158
00:11:25,560 --> 00:11:26,100
then
158

159
00:11:28,240 --> 00:11:30,580
User should be able to view a story.
159

160
00:11:32,550 --> 00:11:41,440
For create we will just return. Any authenticated user can create a story. For update,
160

161
00:11:41,670 --> 00:11:42,870
we will use the same code.
161

162
00:11:44,180 --> 00:11:47,610
We will check if they user id is same as the 
162

163
00:11:49,420 --> 00:11:54,140
User ID of the story. And same thing we're going to do for the delete.
163

164
00:11:55,180 --> 00:11:57,620
Well, we could ignore the restore or forceDelete
164

165
00:11:58,670 --> 00:12:00,950
As they are not in the scope currently. Ok.
165

166
00:12:03,970 --> 00:12:09,220
Now that we have defined all the methods, how we can check
166

167
00:12:10,960 --> 00:12:11,940
Inside our controller.
167

168
00:12:13,870 --> 00:12:22,370
Now the same way we checked how it, now the same way we did a check using Gate,
168

169
00:12:22,660 --> 00:12:24,670
We need to do the same thing using policy.
169

170
00:12:25,690 --> 00:12:30,640
We could do that using this authorize, name of the method.
170

171
00:12:31,090 --> 00:12:31,690
So for
171

172
00:12:33,780 --> 00:12:34,860
Edit it was
172

173
00:12:36,180 --> 00:12:36,720
Update.
173

174
00:12:39,900 --> 00:12:41,900
And then we need to pass it $story.
174

175
00:12:42,000 --> 00:12:43,060
We do not need to pas it
175

176
00:12:43,120 --> 00:12:43,640
they $user.
176

177
00:12:44,430 --> 00:12:47,430
That will be handled automatically by the Laravel.
177

178
00:12:48,660 --> 00:12:50,430
So now if we go to our Browser.
178

179
00:12:58,120 --> 00:13:02,520
And reload it. We still get this 403.
179

180
00:13:02,830 --> 00:13:06,580
So that means our policy is working fine.
180

181
00:13:08,250 --> 00:13:08,570
OK.
181

182
00:13:10,190 --> 00:13:11,270
Let's go to the listing.
182

183
00:13:15,400 --> 00:13:18,100
Let's do the same thing to our Add story.
183

184
00:13:19,120 --> 00:13:23,980
Let's say we decide that we no longer want User to be able to add story.
184

185
00:13:25,060 --> 00:13:29,800
So within the story policy, we are going to
185

186
00:13:31,500 --> 00:13:32,390
Return false
186

187
00:13:32,440 --> 00:13:42,700
Instead of return true for the create. And within our controller we would again need to check,
187

188
00:13:45,810 --> 00:13:51,210
Using this authorizes create, we do not pass any parameter.
188

189
00:13:52,580 --> 00:13:58,500
So now we have disabled adding of a story. So now if a User go to Add Story,
189

190
00:14:01,820 --> 00:14:04,160
He gets a 403 Forbidden.
190

191
00:14:05,540 --> 00:14:06,730
Well, that's cool.
191

192
00:14:08,210 --> 00:14:17,840
However, if we could find a way to disable this link itself, when our Policy is returning false,
192

193
00:14:18,080 --> 00:14:19,100
That would be very cool.
193

194
00:14:20,220 --> 00:14:21,350
Well, we could do that.
194

195
00:14:24,760 --> 00:14:33,910
If you go to our view, we are going to make use of the $can directive. So we will say,
195

196
00:14:35,620 --> 00:14:37,330
If a user can create,
196

197
00:14:38,480 --> 00:14:46,070
and since we are checking for a story, we're going to say App\Story Class.
197

198
00:14:47,580 --> 00:14:58,080
If User  can create a Story and then we are going to have endcan, Only then this link should be displayed.
198

199
00:14:58,770 --> 00:15:00,270
Let's see if it is working or not.
199

200
00:15:05,570 --> 00:15:07,340
Okay, it's not working.
200

201
00:15:08,830 --> 00:15:09,490
Because,
201

202
00:15:11,430 --> 00:15:13,150
Well, I need to change this
202

203
00:15:14,310 --> 00:15:15,500
$ to @
203

204
00:15:16,250 --> 00:15:18,910
Directives are always using @.
204

205
00:15:19,150 --> 00:15:20,280
So let's try once again.
205

206
00:15:20,640 --> 00:15:21,630
Sorry for the mistake.
206

207
00:15:26,150 --> 00:15:27,350
So now we see,
207

208
00:15:28,300 --> 00:15:36,000
that our Add link has been removed. And now if we change our policy and return true instead of return false,
208

209
00:15:37,480 --> 00:15:40,810
We will see that it will be shown back again.
209

210
00:15:41,680 --> 00:15:42,790
So how cool is that?
210

211
00:15:43,660 --> 00:15:45,970
We could do the same for View, Edit and Delete as well.
211

212
00:15:48,070 --> 00:15:55,470
We go to our index and we could use the same directive.
212

213
00:15:55,810 --> 00:15:56,230
@can.
213

214
00:15:57,690 --> 00:15:59,450
So for the view, it would be view.
214

215
00:16:00,090 --> 00:16:01,190
And then we are going to pass it
215

216
00:16:01,410 --> 00:16:01,980
the $story.
216

217
00:16:04,860 --> 00:16:06,290
And endcan.
217

218
00:16:09,130 --> 00:16:11,650
For Edit, again we could
218

219
00:16:13,340 --> 00:16:13,930
pass it
219

220
00:16:15,070 --> 00:16:16,360
The story and the
220

221
00:16:19,180 --> 00:16:21,850
Name of the ability is going to be update.
221

222
00:16:23,910 --> 00:16:24,800
endcan.
222

223
00:16:26,630 --> 00:16:33,100
And for delete, it is going to be to Delete. $story
223

224
00:16:38,950 --> 00:16:39,840
endcan
224

225
00:16:41,830 --> 00:16:45,750
Just formatting it a bit. Now if we go to
225

226
00:16:46,950 --> 00:16:47,610
Our
226

227
00:16:49,010 --> 00:16:49,370
View.
227

228
00:16:52,120 --> 00:16:53,880
Well, we are not going to see any difference.
228

229
00:16:54,270 --> 00:16:58,740
We still see the all the three buttons. However,
229

230
00:16:59,010 --> 00:17:07,020
Let's say that you have a new functionality and you want to disable the delete functionality. Instead
230

231
00:17:07,020 --> 00:17:13,800
of removing the code from the controller and removing the code from the index.
231

232
00:17:14,640 --> 00:17:17,090
You could simply make a change in your policy.
232

233
00:17:19,150 --> 00:17:20,050
You could tell,
233

234
00:17:21,450 --> 00:17:26,610
That we do not want to delete a story in any case.
234

235
00:17:26,660 --> 00:17:28,070
So we can return a false.
235

236
00:17:29,670 --> 00:17:34,770
And once we do that, this delete link would forever be gone.
236

237
00:17:35,880 --> 00:17:41,760
So as we can see, it is so much easy by using the policy method.
237

238
00:17:43,710 --> 00:17:45,540
Well, we have learned a lot in this lesson.
238

239
00:17:46,110 --> 00:17:48,720
We have a much better control on our application.
239

240
00:17:49,500 --> 00:17:54,120
And as you can see, we can easily change a lot of things by just changing the flag.
240

241
00:17:55,080 --> 00:17:56,400
Hope you have enjoyed this lesson.
241

242
00:17:56,790 --> 00:17:57,280
Thank you.
